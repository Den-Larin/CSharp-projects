using System;

namespace Інтерфейси
{
    class Program
    {
        static void Main(string[] args)
        {
            // Завдання 1.2
            WorkTask workTask = new WorkTask("Написати звіт");
            workTask.Start();
            workTask.Complete();
            Console.WriteLine(workTask.GetTaskInfo());

            PersonalTask personalTask = new PersonalTask("Вивчити нову мову програмування");
            personalTask.Start();
            personalTask.Complete();
            Console.WriteLine(personalTask.GetTaskInfo());

            StudyTask studyTask = new StudyTask("ООП");
            studyTask.Start();
            studyTask.Complete();
            Console.WriteLine(studyTask.GetTaskInfo());
            // Завдання 2.2
            MusicTrack track1 = new MusicTrack
            {
                Title = "Пісня 1",
                Artist = "Виконавець 1",
                Duration = TimeSpan.FromMinutes(4)
            };

            MusicTrack track2 = new MusicTrack
            {
                Title = "Пісня 2",
                Artist = "Виконавець 2",
                Duration = TimeSpan.FromMinutes(3)
            };

            track1.Play();
            track1.Pause();
            track1.Stop();

            Console.WriteLine();

            track2.Play();
            track2.Pause();
            track2.Stop();

            Console.WriteLine();

            track1.Record();
            // Завдання 3:
            Smartphone smartphone = new Smartphone("iPhone 15", "Apple", 42500, "A16 Bionic");
            smartphone.DisplayInfo();
            smartphone.AddToCart();

            Console.WriteLine();

            Laptop laptop = new Laptop("ASUS ROG Strix G18", "ASUS", 110000, "Intel Core i7");
            laptop.DisplayInfo();
            laptop.AddToCart();
        }
    }
    public interface ITask
    {
        void Start();
        void Complete();
        string GetTaskInfo();
    }
    public class WorkTask : ITask
    {
        public string WT { get; set; }
        private bool isStarted;
        private bool isCompleted;

        public WorkTask(string wt)
        {
            WT = wt;
        }

        public void Start()
        {
            isStarted = true;
            Console.WriteLine($"Робоче завдання {WT} розпочато");
        }

        public void Complete()
        {
            if (isStarted)
            {
                isCompleted = true;
                Console.WriteLine($"Робоче завдання {WT} виконано");
            }
            else
            {
                Console.WriteLine($"Спочатку потрібно розпочати робоче завдання {WT}");
            }
        }

        public string GetTaskInfo()
        {
            return $"Робоче завдання: {WT}, Розпочато: {isStarted}, Виконано: {isCompleted}";
        }
    }

    public class PersonalTask : ITask
    {
        public string PT { get; set; }
        private bool isStarted;
        private bool isCompleted;

        public PersonalTask(string pt)
        {
            PT = pt;
        }

        public void Start()
        {
            isStarted = true;
            Console.WriteLine($"Особисте завдання {PT} розпочато");
        }

        public void Complete()
        {
            if (isStarted)
            {
                isCompleted = true;
                Console.WriteLine($"Особисте завдання {PT} виконано");
            }
            else
            {
                Console.WriteLine($"Спочатку потрібно розпочати особисте завдання {PT}");
            }
        }

        public string GetTaskInfo()
        {
            return $"Особисте завдання: {PT}, Розпочато: {isStarted}, Виконано: {isCompleted}";
        }
    }

    public class StudyTask : ITask
    {
        public string ST { get; set; }
        private bool isStarted;
        private bool isCompleted;

        public StudyTask(string st)
        {
            ST = st;
        }

        public void Start()
        {
            isStarted = true;
            Console.WriteLine($"Навчальне завдання у курсі {ST} розпочато");
        }

        public void Complete()
        {
            if (isStarted)
            {
                isCompleted = true;
                Console.WriteLine($"Навчальне завдання у курсі {ST} виконано");
            }
            else
            {
                Console.WriteLine($"Спочатку потрібно розпочати навчальне завдання у курсі {ST}");
            }
        }

        public string GetTaskInfo()
        {
            return $"Навчальне завдання: {ST}, Розпочато: {isStarted}, Виконано: {isCompleted}";
        }
    }
    public interface IPlayable
    {
        void Play();
        void Pause();
        void Stop();
    }

    public interface IRecordable
    {
        void Record();
    }

    public class MusicTrack : IPlayable, IRecordable
    {
        public string Title { get; set; }
        public string Artist { get; set; }
        public TimeSpan Duration { get; set; }

        public void Play()
        {
            Console.WriteLine($"Відтворення треку {Title} - {Artist}");
        }

        public void Pause()
        {
            Console.WriteLine($"Пауза відтворення треку {Title} - {Artist}");
        }

        public void Stop()
        {
            Console.WriteLine($"Зупинка відтворення треку {Title} - {Artist}");
        }

        public void Record()
        {
            Console.WriteLine($"Початок запису треку {Title} - {Artist}");
        }
    }
    public interface IProduct
    {
        void DisplayInfo();
    }

    public interface IShoppable
    {
        void AddToCart();
    }

    public class ElectronicDevice : IProduct
    {
        public string Name { get; set; }
        public string Manufacturer { get; set; }
        public decimal Price { get; set; }

        public ElectronicDevice(string name, string manufacturer, decimal price)
        {
            Name = name;
            Manufacturer = manufacturer;
            Price = price;
        }

        public virtual void DisplayInfo()
        {
            Console.WriteLine($"Product: {Name}, Manufacturer: {Manufacturer}, Price: {Price}");
        }
    }

    public class Smartphone : ElectronicDevice, IShoppable
    {
        public string Chip { get; set; }

        public Smartphone(string name, string manufacturer, decimal price, string chip)
            : base(name, manufacturer, price)
        {
            Chip = chip;
        }

        public override void DisplayInfo()
        {
            base.DisplayInfo();
            Console.WriteLine($"Чип: {Chip}");
        }

        public void AddToCart()
        {
            Console.WriteLine($"{Name} додано до кошика");
        }
    }

    public class Laptop : ElectronicDevice, IShoppable
    {
        public string Processor { get; set; }

        public Laptop(string name, string manufacturer, decimal price, string processor)
            : base(name, manufacturer, price)
        {
            Processor = processor;
        }

        public override void DisplayInfo()
        {
            base.DisplayInfo();
            Console.WriteLine($"Процесор: {Processor}");
        }

        public void AddToCart()
        {
            Console.WriteLine($"{Name} додано до кошика");
        }
    }
}
